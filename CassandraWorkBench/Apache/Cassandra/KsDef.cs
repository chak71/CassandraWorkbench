/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;
using Thrift.Transport;
namespace Apache.Cassandra
{

  [Serializable]
  public partial class KsDef : TBase
  {
    private string name;
    private string strategy_class;
    private Dictionary<string, string> strategy_options;
    private int replication_factor;
    private List<CfDef> cf_defs;

    public string Name
    {
      get
      {
        return name;
      }
      set
      {
        __isset.name = true;
        this.name = value;
      }
    }

    public string Strategy_class
    {
      get
      {
        return strategy_class;
      }
      set
      {
        __isset.strategy_class = true;
        this.strategy_class = value;
      }
    }

    public Dictionary<string, string> Strategy_options
    {
      get
      {
        return strategy_options;
      }
      set
      {
        __isset.strategy_options = true;
        this.strategy_options = value;
      }
    }

    public int Replication_factor
    {
      get
      {
        return replication_factor;
      }
      set
      {
        __isset.replication_factor = true;
        this.replication_factor = value;
      }
    }

    public List<CfDef> Cf_defs
    {
      get
      {
        return cf_defs;
      }
      set
      {
        __isset.cf_defs = true;
        this.cf_defs = value;
      }
    }


    public Isset __isset;
    [Serializable]
    public struct Isset {
      public bool name;
      public bool strategy_class;
      public bool strategy_options;
      public bool replication_factor;
      public bool cf_defs;
    }

    public KsDef() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.String) {
              this.name = iprot.ReadString();
              this.__isset.name = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              this.strategy_class = iprot.ReadString();
              this.__isset.strategy_class = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.Map) {
              {
                this.strategy_options = new Dictionary<string, string>();
                TMap _map29 = iprot.ReadMapBegin();
                for( int _i30 = 0; _i30 < _map29.Count; ++_i30)
                {
                  string _key31;
                  string _val32;
                  _key31 = iprot.ReadString();
                  _val32 = iprot.ReadString();
                  this.strategy_options[_key31] = _val32;
                }
                iprot.ReadMapEnd();
              }
              this.__isset.strategy_options = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I32) {
              this.replication_factor = iprot.ReadI32();
              this.__isset.replication_factor = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.List) {
              {
                this.cf_defs = new List<CfDef>();
                TList _list33 = iprot.ReadListBegin();
                for( int _i34 = 0; _i34 < _list33.Count; ++_i34)
                {
                  CfDef _elem35 = new CfDef();
                  _elem35 = new CfDef();
                  _elem35.Read(iprot);
                  this.cf_defs.Add(_elem35);
                }
                iprot.ReadListEnd();
              }
              this.__isset.cf_defs = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("KsDef");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (this.name != null && __isset.name) {
        field.Name = "name";
        field.Type = TType.String;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(this.name);
        oprot.WriteFieldEnd();
      }
      if (this.strategy_class != null && __isset.strategy_class) {
        field.Name = "strategy_class";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(this.strategy_class);
        oprot.WriteFieldEnd();
      }
      if (this.strategy_options != null && __isset.strategy_options) {
        field.Name = "strategy_options";
        field.Type = TType.Map;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteMapBegin(new TMap(TType.String, TType.String, this.strategy_options.Count));
          foreach (string _iter36 in this.strategy_options.Keys)
          {
            oprot.WriteString(_iter36);
            oprot.WriteString(this.strategy_options[_iter36]);
            oprot.WriteMapEnd();
          }
        }
        oprot.WriteFieldEnd();
      }
      if (__isset.replication_factor) {
        field.Name = "replication_factor";
        field.Type = TType.I32;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(this.replication_factor);
        oprot.WriteFieldEnd();
      }
      if (this.cf_defs != null && __isset.cf_defs) {
        field.Name = "cf_defs";
        field.Type = TType.List;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, this.cf_defs.Count));
          foreach (CfDef _iter37 in this.cf_defs)
          {
            _iter37.Write(oprot);
            oprot.WriteListEnd();
          }
        }
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("KsDef(");
      sb.Append("name: ");
      sb.Append(this.name);
      sb.Append(",strategy_class: ");
      sb.Append(this.strategy_class);
      sb.Append(",strategy_options: ");
      sb.Append(this.strategy_options);
      sb.Append(",replication_factor: ");
      sb.Append(this.replication_factor);
      sb.Append(",cf_defs: ");
      sb.Append(this.cf_defs);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
